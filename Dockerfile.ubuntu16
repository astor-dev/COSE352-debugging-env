FROM ubuntu:16.04

# Ubuntu 16.04 패키지 저장소를 archive로 변경 (16.04는 더 이상 지원되지 않음)
RUN sed -i 's|archive.ubuntu.com|old-releases.ubuntu.com|g' /etc/apt/sources.list && \
    sed -i 's|security.ubuntu.com|old-releases.ubuntu.com|g' /etc/apt/sources.list

# 필수 패키지 설치
RUN apt update && apt install -y --no-install-recommends \
    software-properties-common curl wget \
    build-essential cmake g++ \
    libssl-dev libbz2-dev libreadline-dev libsqlite3-dev \
    libffi-dev zlib1g-dev libncurses5-dev libncursesw5-dev \
    xz-utils tk-dev pkg-config \
    libzmq3-dev \
    gcc g++ make \
    ca-certificates \
    && apt clean && rm -rf /var/lib/apt/lists/*

# Python 3.7.17 소스 다운로드 및 빌드 (Ubuntu 16.04에 적정한 버전)
RUN curl -fSL "https://www.python.org/ftp/python/3.7.17/Python-3.7.17.tgz" -o Python-3.7.17.tgz \
    && tar -xzf Python-3.7.17.tgz \
    && cd Python-3.7.17 \
    && ./configure --enable-optimizations --with-ensurepip=install --enable-shared \
    && make -j$(nproc) \
    && make altinstall \
    && cd .. && rm -rf Python-3.7.17 Python-3.7.17.tgz

# Python3 심볼릭 링크 생성
RUN ln -s /usr/local/bin/python3.7 /usr/local/bin/python3

# /usr/local/lib를 시스템 라이브러리 경로에 추가 및 ldconfig 실행
RUN echo "/usr/local/lib" > /etc/ld.so.conf.d/python3.7.conf && ldconfig

# 공유 라이브러리 경로 설정
ENV LD_LIBRARY_PATH="/usr/local/lib:$LD_LIBRARY_PATH"

# venv를 /opt/venv에 생성
RUN /usr/local/bin/python3.7 -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# pip 업그레이드
RUN /opt/venv/bin/pip install --no-cache-dir --upgrade pip setuptools wheel

# 추가 의존성들
# pytest
RUN /opt/venv/bin/pip install --no-cache-dir pytest
# markdown
RUN /opt/venv/bin/pip install --no-cache-dir markdown
# graphviz
RUN /opt/venv/bin/pip install --no-cache-dir graphviz

# 작업 디렉토리 설정
WORKDIR /workspace

# 기본 쉘로 실행 (Jupyter notebook 없음)
CMD ["/bin/bash"] 